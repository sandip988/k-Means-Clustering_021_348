{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOOWuHo+pMQAoPPcl1LweR/",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sandip988/k-Means-Clustering_021_348/blob/main/2_key_features.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 802
        },
        "id": "V8FJ152D945i",
        "outputId": "fd07b32c-1825-48fc-d557-e2f9c50ed0e8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Converged at iteration 3\n",
            "\n",
            "Final Cluster Assignments:\n",
            "Point [1. 2.] -> Cluster 1\n",
            "Point [1.5 1.8] -> Cluster 1\n",
            "Point [5. 8.] -> Cluster 0\n",
            "Point [8. 8.] -> Cluster 0\n",
            "Point [1.  0.6] -> Cluster 1\n",
            "Point [ 9. 11.] -> Cluster 0\n",
            "Point [8. 2.] -> Cluster 0\n",
            "Point [10.  2.] -> Cluster 0\n",
            "Point [9. 3.] -> Cluster 0\n",
            "Point [4. 9.] -> Cluster 0\n",
            "\n",
            "Final Centroids:\n",
            "[[7.57142857 6.14285714]\n",
            " [1.16666667 1.46666667]]\n",
            "\n",
            "WCSS (Within-Cluster Sum of Squares): 113.8848\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Provided 2D dataset\n",
        "data = np.array([\n",
        "    [1, 2], [1.5, 1.8], [5, 8], [8, 8], [1, 0.6],\n",
        "    [9, 11], [8, 2], [10, 2], [9, 3], [4, 9]\n",
        "])\n",
        "\n",
        "k = 2\n",
        "max_iters = 100\n",
        "\n",
        "# Step 1: Random initialization of centroids\n",
        "np.random.seed(42)\n",
        "centroids = data[np.random.choice(len(data), k, replace=False)]\n",
        "\n",
        "for iteration in range(max_iters):\n",
        "    # Step 2: Assign clusters based on closest centroid\n",
        "    distances = np.linalg.norm(data[:, np.newaxis] - centroids, axis=2)\n",
        "    cluster_assignments = np.argmin(distances, axis=1)\n",
        "\n",
        "    # Step 3: Calculate new centroids\n",
        "    new_centroids = np.array([data[cluster_assignments == j].mean(axis=0) for j in range(k)])\n",
        "\n",
        "    # Check convergence\n",
        "    if np.allclose(centroids, new_centroids):\n",
        "        print(f\"Converged at iteration {iteration + 1}\")\n",
        "        break\n",
        "    centroids = new_centroids\n",
        "\n",
        "# Final assignments and centroids\n",
        "print(\"\\nFinal Cluster Assignments:\")\n",
        "for idx, point in enumerate(data):\n",
        "    print(f\"Point {point} -> Cluster {cluster_assignments[idx]}\")\n",
        "\n",
        "print(\"\\nFinal Centroids:\")\n",
        "print(centroids)\n",
        "\n",
        "# WCSS (Within-cluster sum of squares)\n",
        "wcss = 0\n",
        "for j in range(k):\n",
        "    cluster_points = data[cluster_assignments == j]\n",
        "    wcss += np.sum((cluster_points - centroids[j]) ** 2)\n",
        "\n",
        "print(f\"\\nWCSS (Within-Cluster Sum of Squares): {wcss:.4f}\")\n",
        "\n",
        "# Visualization\n",
        "colors = ['red', 'blue']\n",
        "for j in range(k):\n",
        "    cluster_points = data[cluster_assignments == j]\n",
        "    plt.scatter(cluster_points[:, 0], cluster_points[:, 1], color=colors[j], label=f'Cluster {j}')\n",
        "\n",
        "plt.scatter(centroids[:, 0], centroids[:, 1], marker='X', s=200, color='black', label='Centroids')\n",
        "plt.title(\"k-Means Clustering (k=2)\")\n",
        "plt.xlabel(\"X-coordinate\")\n",
        "plt.ylabel(\"Y-coordinate\")\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ]
    }
  ]
}